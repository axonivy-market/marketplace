properties([
  parameters([
    [$class: 'GitParameterDefinition',
      name: 'BRANCH',
      type: 'PT_BRANCH',
      defaultValue: 'origin/master',
      description: 'Choose your GitHub branch',
      branchFilter: '.*',
      tagFilter: '*',
      sortMode: 'NONE',
      selectedValue: 'DEFAULT',
      quickFilterEnabled: true
    ]
  ])
])

pipeline {

  agent any
  options {
    ansiColor('xterm')
  }

  environment {
    NGINX_CONFIG_PATH = '../config/nginx/nginx.conf'
    GITHUB_ACTOR = credentials('MARKETPLACE_GITHUB_OWNER')
    GITHUB_REPOSITORY_OWNER = 'axonivy-market'
    UI_IMAGE_NAME = 'marketplace-ui'
    SERVICE_IMAGE_NAME = 'marketplace-service'
    MARKETPLACE_GIT_URL = credentials('MARKETPLACE_GIT_URL')
    MARKET_GITHUB_MARKET_BRANCH = credentials('MARKET_GITHUB_MARKET_BRANCH')
    GH_TOKEN = credentials('GH_TOKEN')
    VERSION_RETENTION_COUNT = credentials('VERSION_RETENTION_COUNT')
    MARKET_JWT_SECRET_KEY = credentials('MARKET_JWT_SECRET_KEY')
    MARKET_CORS_ALLOWED_ORIGIN = credentials('MARKET_CORS_ALLOWED_ORIGIN')
    MARKET_CLICK_LIMIT = credentials('MARKET_CLICK_LIMIT')
    MARKET_LIMITED_REQUEST_PATHS = credentials('MARKET_LIMITED_REQUEST_PATHS')
    POSTGRES_HOST_URL = credentials('POSTGRES_HOST_URL')
    POSTGRES_USERNAME = credentials('POSTGRES_USERNAME')
    POSTGRES_PASSWORD = credentials('POSTGRES_PASSWORD')
    OAUTH_APP_CLIENT_ID = credentials('OAUTH_APP_CLIENT_ID')
    OAUTH_APP_CLIENT_SECRET = credentials('OAUTH_APP_CLIENT_SECRET')
    OCTOPUS_MAIL = credentials('OCTOPUS_MAIL')
    OCTOPUS_ACCOUNT_NAME = credentials('OCTOPUS_ACCOUNT_NAME')
  }

  parameters {
    string(name: 'RELEASE_VERSION', defaultValue: 'latest', description: 'Release version')
  }

  stages {

    stage('Checkout Source') {
      steps {
        script {
          def gitBranch = params.BRANCH.replaceFirst(/^origin\//, '')
          git branch: gitBranch, url: env.MARKETPLACE_GIT_URL
        }
      }
    }

    stage('Log in to GitHub Container Registry') {
      steps {
        sh """
          echo $GH_TOKEN | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin
        """
      }
    }

    stage('Release Marketplace UI Image') {
      steps {
        sh """
          set -euo pipefail

          # Cleanup old UI image versions
          IMAGE_NAME='my-test-image'
          bash ./scripts/ghcr-cleanup.sh
        """
      }
    }
  }
}
