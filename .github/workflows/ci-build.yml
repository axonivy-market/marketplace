name: CI Build
run-name: Build on branch ${{github.ref_name}} triggered by ${{github.actor}}

on:
  push:
  workflow_dispatch:

jobs:
  analysis:
    name: Sonarqube analysis
    runs-on: self-hosted
    env:
      SONAR_PROJECT_KEY: "AxonIvy-Market-Service"
      SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Build with Maven
        run: mvn clean install
      - uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ env.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ env.SONAR_HOST_URL }}
        with:
          args:
            -Dsonar.projectKey=${{ env.SONAR_PROJECT_KEY }}
            -Dsonar.java.binaries=target/classes
            -Dsonar.branch.name=${{ github.ref_name }}
      - name: SonarQube Quality Gate check
        id: sonarqube-quality-gate-check
        uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ env.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ env.SONAR_HOST_URL }}
        with:
          args:
            -Dsonar.projectKey=${{ env.SONAR_PROJECT_KEY }}
  build:
    name: Executes Tests
    runs-on: self-hosted

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Tests with Maven
      run: mvn -B test --file pom.xml
