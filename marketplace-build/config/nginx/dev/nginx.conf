user www-data;
worker_processes auto;

events {}

http {
    include /etc/nginx/mime.types;

    server {
        listen 80;
        server_name marketplace;

        root /usr/share/nginx/html;
        index index.html;

        location / {
            try_files $uri $uri/ /index.html;
        }

        location /marketplace-service {
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-NginX-Proxy true;
            proxy_pass http://service:8080/marketplace-service;
            proxy_ssl_session_reuse off;
            proxy_set_header Host $http_host;
            proxy_cache_bypass $http_upgrade;
            proxy_redirect off;
        }

        # Start: Handle for DOCs
        location /market-cache/ {
            alias /usr/share/nginx/html/market-cache/;
            index index.html;
            try_files $uri $uri/ /index.html;
        }
        # End: Handle for DOCs

        # Start: Handle for LIBs
        # Workaround for static libs. e.g: https://market.axonivy.com/demos-app/dev/lib/ivy-demos-app.zip
        location ~ ^/([^/]+)/([^/]+)/lib/(.*)$ {
            content_by_lua_block {
                local http = require "resty.http"
                local productId = ngx.var[1]
                local version = ngx.var[2]
                local artifact = ngx.var[3]

                -- Make API request
                local httpc = http.new()
                local res, err = httpc:request_uri("http://api.example.com/get-redirect-url", {
                    method = "GET",
                    query = { productId = productId, version = version, artifact = artifact }
                })

                if not res then
                    ngx.status = 500
                    ngx.say("Error occurred: ", err)
                    return
                end

                if res.status == 200 then
                    ngx.redirect(res.body)
                else
                    ngx.status = res.status
                    ngx.say("API call failed with status: ", res.status)
                end
            }
        }
        # End: Handle for LIBs

        error_page 403 /error-page;
    }
}